<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (C) 2016-present Prominic.NET, Inc.
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the Server Side Public License, version 1,
//  as published by MongoDB, Inc.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  Server Side Public License for more details.
//
//  You should have received a copy of the Server Side Public License
//  along with this program. If not, see
//
//  http://www.mongodb.com/licensing/server-side-public-license
//
//  As a special exception, the copyright holders give permission to link the
//  code of portions of this program with the OpenSSL library under certain
//  conditions as described in each individual source file and distribute
//  linked combinations including the program with the OpenSSL library. You
//  must comply with the Server Side Public License in all respects for
//  all of the code used other than as permitted herein. If you modify file(s)
//  with this exception, you may extend this exception to your version of the
//  file(s), but you are not obligated to do so. If you do not wish to do so,
//  delete this exception statement from your version. If you delete this
//  exception statement from all source files in the program, then also delete
//  it in the license file.
//
////////////////////////////////////////////////////////////////////////////////
-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark">
	
	<fx:Metadata>
		[HostComponent("spark.components.CheckBox")]
	</fx:Metadata>
	
	<s:states>
		<s:State name="up" />
		<s:State name="over" stateGroups="overStates" />
		<s:State name="down" stateGroups="downStates" />
		<s:State name="disabled" stateGroups="disabledStates" />
		<s:State name="upAndSelected" />
		<s:State name="overAndSelected" stateGroups="overStates" />
		<s:State name="downAndSelected" stateGroups="downStates" />
		<s:State name="disabledAndSelected" stateGroups="disabledStates" />
	</s:states>
	
	<s:Group verticalCenter="0" layoutDirection="ltr">
		<!-- background -->
		<s:Rect left="0" right="0" width="20" top="0" bottom="0" height="20">
			<s:fill>
				<s:SolidColor color="0xffffff"
							  color.over="0xeeeeee"
							  color.overAndSelected="0x186ba0"
							  color.downAndSelected="0x186ba0"
							  color.upAndSelected="0x186ba0"
							  color.disabledAndSelected="0x186ba0"/>
			</s:fill>
			<s:stroke>
				<s:SolidColorStroke weight="1" color="0xc0c0c0"
									color.over="0xc0c0c0"
									color.overAndSelected="0x156090"
									color.downAndSelected="0x156090"
									color.upAndSelected="0x156090"
									color.disabledAndSelected="0x156090"/>
			</s:stroke>
		</s:Rect>
		
		<!-- checkmark -->
		<s:Path data="M 3.5 8.5 l 2 2 l 6 -7"
				includeIn="upAndSelected, overAndSelected, downAndSelected, disabledAndSelected"
				horizontalCenter="0" verticalCenter="-1">
			<s:stroke>
				<s:SolidColorStroke weight="3" caps="square" color="#ffffff" />
			</s:stroke>
		</s:Path>
	</s:Group>
	
	<!-- Label -->
	<s:Label id="labelDisplay"
			 textAlign="start"
			 verticalAlign="middle"
			 maxDisplayedLines="1" fontSize="13"
			 left="27" right="0" verticalCenter="0" />
	
</s:Skin>