<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  width="100%" height="100%"
		  initialize="onInitialize(event)" creationComplete="onCreationCompletes(event)">
	<fx:Metadata>
		[Event(name="editedItem", type="view.suportClasses.events.ItemEditedEvent")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import flash.net.registerClassAlias;
			
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			import mx.validators.Validator;
			
			import skins.StackedFormItemSkin;
			import skins.TextInputSkin;
			
			import view.suportClasses.events.ItemEditedEvent;
			import view.tabularInterface.vo.DominoFormFieldVO;
			import view.tabularInterface.vo.TabularEditableType;
			import view.tabularInterface.vo.TabularFieldType;
			
			[Bindable] protected var dominoFormField:DominoFormFieldVO;
			
			public var editItem:DominoFormFieldVO;
			public var setControlBarContent:Function;
			public var isItemEdit:Boolean;
			
			private function onInitialize(event:FlexEvent):void
			{
				if (isItemEdit)
				{
					// if item in edit use cloned object until save
					registerClassAlias("view.tabularInterface.vo.DominoFormFieldVO", DominoFormFieldVO);
					dominoFormField = ObjectUtil.clone(editItem) as DominoFormFieldVO;
				}
				else
				{
					dominoFormField = new DominoFormFieldVO();
				}
			}
			
			private function onCreationCompletes(event:FlexEvent):void
			{
				// set the content-bar buttons
				setControlBarContent([controlBarButtons]);
				setControlBarContent = null;
				
				// set edit fields or update
				if (isItemEdit)
				{
					ddlType.selectedItem = dominoFormField.type;
					ddlEditable.selectedItem = dominoFormField.editable;
					ddlSort.selectedItem = dominoFormField.sortOption;
				}
				else
				{
					dominoFormField.type = ddlType.selectedItem;
					dominoFormField.editable = ddlEditable.selectedItem;
					dominoFormField.sortOption = ddlSort.selectedItem;
				}
			}
			
			private function onSaveRequest(event:MouseEvent):void
			{
				if (!validateThis()) return;
				
				dispatchEvent(new ItemEditedEvent(
					ItemEditedEvent.ITEM_EDITED,
					dominoFormField,
					editItem
					));
				onCancel(null);
			}
			
			private function onCancel(event:MouseEvent):void
			{
				this.owner.dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
			}
			
			private function validateThis():Boolean
			{
				var tmpArr : Array = new Array(svName);
				if (Validator.validateAll(tmpArr).length != 0) 
				{
					return false;
				}
				
				return true;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:HGroup id="controlBarButtons" width="100%" verticalAlign="middle" horizontalAlign="right">
			<s:Button label="Save" styleName="darkButton" click="onSaveRequest(event)"/>
			<s:Button label="Cancel" styleName="darkButton" click="onCancel(event)"/>
		</s:HGroup>
		<s:ArrayList id="sortOptions">
			<fx:String>No sorting</fx:String>
			<fx:String>Ascending</fx:String>
			<fx:String>Descending</fx:String>
			<fx:String>Categorized(Ascending)</fx:String>
			<fx:String>Categorized(Descending)</fx:String>
		</s:ArrayList>
		<mx:StringValidator id="svName" source="{txtName}" property="text"/>
	</fx:Declarations>
	<s:Rect left="0" right="0" top="0" bottom="0">
		<s:fill>
			<s:SolidColor color="0xf5f5f5"/>
		</s:fill>
	</s:Rect>
	
	<s:VGroup paddingLeft="12" paddingBottom="6" paddingTop="9" paddingRight="0"
			  gap="10" width="100%" height="100%">
		<s:Scroller width="100%" height="100%">
			<s:Group width="100%">
				<s:Form width="100%">
					<s:FormHeading label="General Information"/>
					<s:FormItem label="Name" required="true" 
								skinClass="skins.StackedFormItemSkin" width="100%">
						<s:TextInput id="txtName"
									 width="100%"
									 skinClass="skins.TextInputSkin" prompt="Item name"
									 text="@{dominoFormField.name}"/>
					</s:FormItem>
					<s:FormItem label="Label" 
								skinClass="skins.StackedFormItemSkin" width="100%">
						<s:TextInput id="textLabel"
									 width="100%"
									 skinClass="skins.TextInputSkin" prompt="Item label"
									 text="@{dominoFormField.label}"/>
					</s:FormItem>
					<s:FormItem label="Description" 
								skinClass="skins.StackedFormItemSkin" width="100%">
						<s:TextInput id="textDescription"
									 width="100%"
									 skinClass="skins.TextInputSkin" prompt="Item description"
									 text="@{dominoFormField.description}"/>
					</s:FormItem>
					<s:FormItem label="Type" 
								skinClass="skins.StackedFormItemSkin" width="100%">
						<s:DropDownList id="ddlType" width="100%" height="30"
										dataProvider="{TabularFieldType.FIELD_TYPES}" 
										requireSelection="true" 
										change="{dominoFormField.type=event.target.selectedItem}"/>
					</s:FormItem>
					<s:FormItem label="Multivalue" 
								skinClass="skins.FormItemSkin" width="100%">
						<s:CheckBox id="cbMultivalue"
									selected="@{dominoFormField.isMultiValue}"/>
					</s:FormItem>
					<s:Spacer height="1"/>
					<s:FormItem label="Editable" 
								skinClass="skins.StackedFormItemSkin" width="100%">
						<s:DropDownList id="ddlEditable" width="100%" height="30"
										dataProvider="{TabularEditableType.EDITABLE_TYPES}"
										requireSelection="true"
										change="{dominoFormField.editable=event.target.selectedItem}"/>
					</s:FormItem>
					<s:FormItem label="Formula" 
								skinClass="skins.StackedFormItemSkin" width="100%">
						<s:TextInput id="textFormula"
									 width="100%"
									 skinClass="skins.TextInputSkin" prompt="Enter formula"
									 text="@{dominoFormField.formula}"/>
					</s:FormItem>
					<s:Spacer height="10"/>
					<s:FormHeading label="View Options"/>
					<s:FormItem label="Include in View" 
								skinClass="skins.FormItemSkin" width="100%">
						<s:CheckBox id="cbInclude"
									selected="@{dominoFormField.isIncludeInView}"/>
					</s:FormItem>
					<s:Spacer height="1"/>
					<s:FormItem label="Sorting" 
								skinClass="skins.StackedFormItemSkin" width="100%">
						<s:DropDownList id="ddlSort" width="100%" height="30"
										dataProvider="{sortOptions}" requireSelection="true"
										change="{dominoFormField.sortOption=event.target.selectedItem}"/>
					</s:FormItem>
				</s:Form>
			</s:Group>
		</s:Scroller>
	</s:VGroup>
</s:Group>