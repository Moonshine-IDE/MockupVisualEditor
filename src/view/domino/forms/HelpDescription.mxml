<?xml version="1.0" encoding="utf-8"?>
<suportclasses:BasePropertyEditorForm xmlns:fx="http://ns.adobe.com/mxml/2009"
									  xmlns:s="library://ns.adobe.com/flex/spark"
									  xmlns:suportclasses="view.suportClasses.*"
									  skinClass="skins.FormSkin"
								      xmlns:forms="view.forms.*"
                                      creationComplete="onTextFormCreationComplete(event)"
                                       >

	<suportclasses:layout>
		<s:FormLayout />
	</suportclasses:layout>
   

    <s:BorderContainer 
             cornerRadius="0"
            borderStyle="solid" borderWeight="0" 
            left="0" right="0" width="320" top="10" bottom="10" includeInLayout="true" visible="true" id="hidePanel">
	
		<s:VGroup horizontalAlign="left" verticalAlign="top" percentHeight="100" 
		     padding="5">
            <s:Label text="{label}"/>
                <s:TextInput id="fieldTextInput" skinClass="skins.TextInputSkin"
					 text="{bindableText}"  focusOut="textInput_changeHandler(event)"
                    change="textInput_changeHandler(event)"
					 height="25" width="200" tabIndex="1" keyDown="textInput_changeHandler(event)"/>

                
           
        </s:VGroup> 
    </s:BorderContainer>   


	<fx:Script><![CDATA[
		 import mx.binding.utils.BindingUtils;
        import mx.binding.utils.ChangeWatcher;
        import mx.events.FlexEvent;

        import view.interfaces.ISurfaceComponent;

        private var _binding:ChangeWatcher;

        public var _hasError:Boolean=false;

        [Bindable]
        public var prompt:String;

        [Bindable]
        public var bindableText:String;

        private var _label:String = "Text";

        [Bindable("labelChange")]
        public function get label():String
        {
            return this._label;
        }

        public function set label(value:String):void
        {
            if (this._label === value)
            {
                return;
            }
            this._label = value;
            this.dispatchEvent(new Event("labelChange"));
        }

        private var _textProperty:String = "text";

        [Bindable("change")]
        public function get textProperty():String
        {
            return this._textProperty;
        }

        public function set textProperty(value:String):void
        {
            if (this._textProperty === value)
            {
                return;
            }
            this._textProperty = value;
            this.updateBinding();
            this.dispatchEvent(new Event(Event.CHANGE));
        }

        override public function set selectedItem(value:ISurfaceComponent):void
        {
            super.selectedItem = value;
            this.updateBinding();
          
        }

        private function updateBinding():void
        {
            if (this._binding)
            {
                this._binding.unwatch();
                this._binding = null;
            }
            if (this.selectedItem === null)
            {
                return;
            }
            this._binding = BindingUtils.bindProperty(this, "bindableText", this.selectedItem, this._textProperty, false, true);
        }

         private function textInput_changeHandler(event:Event):void
        {
            if (!this.selectedItem) return;

            if (!(this.textProperty in this.selectedItem))
            {
                this.fieldTextInput.errorString = "Field " + this._textProperty + " does not exist";
                return;
            }
            this.fieldTextInput.errorString = "";
            this.selectedItem[this._textProperty] = this.fieldTextInput.text;
            this.dispatchEvent(new Event(Event.CHANGE));
        }

        private function onTextFormCreationComplete(event:FlexEvent):void
        {
           if(this.selectedItem[this._textProperty]!=null && this.selectedItem[this._textProperty].length>0){
               this.fieldTextInput.text = this.selectedItem[this._textProperty];
           }
        }
        
        ]]></fx:Script>
</suportclasses:BasePropertyEditorForm>