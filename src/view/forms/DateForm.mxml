<?xml version="1.0" encoding="utf-8"?>
<suportclasses:BasePropertyEditorForm
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:mx="library://ns.adobe.com/flex/mx"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:suportclasses="view.suportClasses.*" skinClass="skins.FormSkin"
        creationComplete="onDateFormCreationComplete(event)">

    <suportclasses:layout>
        <s:FormLayout />
    </suportclasses:layout>

    <s:FormHeading skinClass="skins.FormHeadingSkin" height="0"/>
    <s:FormItem label="{label}" skinClass="skins.StackedFormItemSkin">
        <mx:DateField id="dateField" width="100%"
                      selectedDate="{bindableDate}" change="dateField_changeHandler(event)"/>
    </s:FormItem>
    <fx:Script><![CDATA[
        import mx.binding.utils.BindingUtils;
        import mx.binding.utils.ChangeWatcher;
        import mx.events.FlexEvent;

        import view.interfaces.ISurfaceComponent;

        [Bindable]
        public var bindableDate:Date;

        private var _binding:ChangeWatcher;

        private var _label:String = "Date";

        [Bindable("labelChange")]
        public function get label():String
        {
            return this._label;
        }

        public function set label(value:String):void
        {
            if (this._label === value)
            {
                return;
            }
            this._label = value;
            this.dispatchEvent(new Event("labelChange"));
        }

        private var _textProperty:String = "selectedDate";

        [Bindable("change")]
        public function get textProperty():String
        {
            return this._textProperty;
        }

        public function set textProperty(value:String):void
        {
            if (this._textProperty === value)
            {
                return;
            }
            this._textProperty = value;
            this.updateBinding();
            this.dispatchEvent(new Event(Event.CHANGE));
        }

        override public function set selectedItem(value:ISurfaceComponent):void
        {
            super.selectedItem = value;
            this.updateBinding();
        }

        private function dateField_changeHandler(event:Event):void
        {
            selectedItem[textProperty] = this.dateField.selectedDate;
            this.dispatchEvent(new Event(Event.CHANGE));
        }

        private function updateBinding():void
        {
            if (this._binding)
            {
                this._binding.unwatch();
                this._binding = null;
            }
            if (this.selectedItem === null)
            {
                return;
            }
            this._binding = BindingUtils.bindProperty(this, "bindableDate", this.selectedItem, textProperty, true);
        }

        private function onDateFormCreationComplete(event:FlexEvent):void
        {
            _childrenForFocus = [];
            _childrenForFocus.push(dateField);
        }
        ]]></fx:Script>
</suportclasses:BasePropertyEditorForm>
