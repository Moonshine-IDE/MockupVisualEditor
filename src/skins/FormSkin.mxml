<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (C) STARTcloud, Inc. 2015-2022. All rights reserved.
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the Server Side Public License, version 1,
//  as published by MongoDB, Inc.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  Server Side Public License for more details.
//
//  You should have received a copy of the Server Side Public License
//  along with this program. If not, see
//
//  http://www.mongodb.com/licensing/server-side-public-license
//
//  As a special exception, the copyright holders give permission to link the
//  code of portions of this program with the OpenSSL library under certain
//  conditions as described in each individual source file and distribute
//  linked combinations including the program with the OpenSSL library. You
//  must comply with the Server Side Public License in all respects for
//  all of the code used other than as permitted herein. If you modify file(s)
//  with this exception, you may extend this exception to your version of the
//  file(s), but you are not obligated to do so. If you do not wish to do so,
//  delete this exception statement from your version. If you delete this
//  exception statement from all source files in the program, then also delete
//  it in the license file.
//
////////////////////////////////////////////////////////////////////////////////
-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
	alpha.disabled="0.5">

	<fx:Metadata>
		[HostComponent("spark.components.Form")]
    </fx:Metadata>

	<fx:Script fb:purpose="styling">
        <![CDATA[
		/**
		 *  @private
		 */
		override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
		{
			// Push backgroundColor and backgroundAlpha directly.
			// Handle undefined backgroundColor by hiding the background object.
			if (isNaN(getStyle("backgroundColor")))
			{
				background.visible = false;
			}
			else
			{
				background.visible = true;
				bgFill.color = getStyle("backgroundColor");
				bgFill.alpha = getStyle("backgroundAlpha");
			}

			super.updateDisplayList(unscaledWidth, unscaledHeight);
		}
		]]>        
    </fx:Script>

	<s:states>
		<s:State name="normal" />
		<s:State name="error" />
		<s:State name="disabled" />
	</s:states>

	<!--- Defines the appearance of the Form class's background. -->
	<s:Rect id="background" left="0" right="0" top="0" bottom="0">
		<s:fill>
			<!--- @private -->
			<s:SolidColor id="bgFill" color="#FFFFFF"/>
		</s:fill>
	</s:Rect>
	<!--- @copy spark.components.SkinnableContainer#contentGroup -->
	<!-- We set Form's showErrorTip and showErrorSkin to false, so we set them back 
		 to true for the Form's elements -->
	<s:Group id="contentGroup" showErrorSkin="true" showErrorTip="true"
		left="0" right="0" top="0" bottom="0">
		<s:layout>
			<s:FormLayout gap="8"/>
		</s:layout>
	</s:Group>


</s:Skin>
