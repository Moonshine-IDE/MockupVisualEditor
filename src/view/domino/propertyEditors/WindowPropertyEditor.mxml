<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (C) STARTcloud, Inc. 2015-2022. All rights reserved.
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the Server Side Public License, version 1,
//  as published by MongoDB, Inc.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  Server Side Public License for more details.
//
//  You should have received a copy of the Server Side Public License
//  along with this program. If not, see
//
//  http://www.mongodb.com/licensing/server-side-public-license
//
//  As a special exception, the copyright holders give permission to link the
//  code of portions of this program with the OpenSSL library under certain
//  conditions as described in each individual source file and distribute
//  linked combinations including the program with the OpenSSL library. You
//  must comply with the Server Side Public License in all respects for
//  all of the code used other than as permitted herein. If you modify file(s)
//  with this exception, you may extend this exception to your version of the
//  file(s), but you are not obligated to do so. If you do not wish to do so,
//  delete this exception statement from your version. If you delete this
//  exception statement from all source files in the program, then also delete
//  it in the license file.
//
////////////////////////////////////////////////////////////////////////////////
-->
<suportclasses:BasePropertyEditor xmlns:fx="http://ns.adobe.com/mxml/2009"
                                  xmlns:s="library://ns.adobe.com/flex/spark"
                                  xmlns:suportclasses="view.suportClasses.*" 
							      xmlns:primeFaces="view.primeFaces.forms.*" 
							      xmlns:forms="view.forms.*"
								  creationComplete="onInputCreationComplete(event)">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayList;
			import spark.events.IndexChangeEvent;
			import mx.utils.StringUtil;
			import mx.events.FlexEvent;
			//Domino form property list
			/**
			 *Notes client formula: htmlbody,htmlhead,targetframe
			 *Web js:jsheader
			 *Notes/Web client :onHelp,onLoad,onUnload,onClick,onDbClick ,onKeyDown,onKeyPress,onKeyUp,onKeyDown,onMouseDown,onMouseMove
			 *onMouseOut,onMouseOver,onMouseUp,onRest,onSubmit,
			 *Notes: QueryOpen,PostOpen,queryModeChange,PostmodeChange,Queryrecalc,Postrecalc,Querysave,Postsave
			         QuerySend,Postsend,Queryclose,Initialize,Terminate  
			 */

			

            private function getDominoFieldObject(item:Object):String
			{
				//defaultvalue
				//inputtranslation
				//inputvalidation
				//hidewhen
				if(item.value=="webqueryopen"){
					webqueryopen.visible = webqueryopen.includeInLayout = true;
					webquerysave.visible = webquerysave.includeInLayout = false;
					
				}else if(item.value=="webquerysave"){
					webqueryopen.visible = webqueryopen.includeInLayout = false;
					webquerysave.visible = webquerysave.includeInLayout = true;
				
				}else{
					webqueryopen.visible = webqueryopen.includeInLayout = true;
					webquerysave.visible = webquerysave.includeInLayout = false;

				}
				return item.value;
			}
            private function getDominoFieldTooltip(item:Object):String
			{
				return item.description;
			}



			private function noreplace_changeHandler(event:Event):void
			{
				this.selectedItem["noreplace"] = this.noreplaceCheckbox.selected;
			}

			

			private function propagatenoreplace_changeHandler(event:Event):void
			{
				this.selectedItem["propagatenoreplace"] = this.propagatenoreplaceCheckBox.selected;
			}


			private function onInputCreationComplete(event:FlexEvent):void
			{
				if(this.selectedItem["hide"]!=null && this.selectedItem["hide"].length>0 ){
					if(this.selectedItem["hide"].indexOf("web")>=0){
						hideForWebCheckbox.selected=true
					}else{
						hideForWebCheckbox.selected=false
					}

					if(this.selectedItem["hide"].indexOf("notes")>=0){
						hideForNotesCheckbox.selected=true
					}else{
						hideForNotesCheckbox.selected=false
					}

					if(this.selectedItem["hide"].indexOf("v4")>=0){
						hideForNotesR4Checkbox.selected=true
					}else{
						hideForNotesR4Checkbox.selected=false
					}
				}

				if(this.selectedItem["noreplace"]){
					noreplaceCheckbox.selected=true;
				}else{
					noreplaceCheckbox.selected=false;
				}

				if(this.selectedItem["propagatenoreplace"]){
					propagatenoreplaceCheckBox.selected=true;
				}else{
					propagatenoreplaceCheckBox.selected=false;
				}
			}

			

			private function hide_changeHandler(event:Event):void
			{
				var hideWeb:String=null;
				var hideNotes:String=null;
				var hideNotesR4:String=null;
				
				
				if(hideForWebCheckbox.selected==true){
					hideWeb="web"
				}else{
					hideWeb=null
				}
				if(hideForNotesCheckbox.selected==true){
					hideNotes="notes"
				}else{
					hideNotes=null
				}
				if(hideForNotesR4Checkbox.selected==true){
					hideNotesR4="v4"
				}else{
					hideNotesR4=null
				}
				

				this.selectedItem["hide"]=null;
				if(hideWeb){
					this.selectedItem["hide"]=hideWeb
				}

				if(hideNotes){
					if(this.selectedItem["hide"]){
						this.selectedItem["hide"]=this.selectedItem["hide"]+" "+hideNotes;
					}else{
						this.selectedItem["hide"]=hideNotes
					}
					
				}


				if(hideNotesR4){
					if(this.selectedItem["hide"]){
						this.selectedItem["hide"]=this.selectedItem["hide"]+" "+hideNotesR4;
					}else{
						this.selectedItem["hide"]=hideNotesR4
					}
				}

				if(this.selectedItem["hide"]){
					this.selectedItem["hide"]=StringUtil.trim(this.selectedItem["hide"]);
				}
			}
     ]]>
	</fx:Script>


    <suportclasses:layout>
        <s:VerticalLayout gap="10" padding="10" horizontalAlign="contentJustify"/>
    </suportclasses:layout>

    <primeFaces:BasicsForm/>

    <s:FormHeading label="Data" skinClass="skins.FormHeadingSkin"/>

    <!-- <forms:TextForm label="Title" textProperty="title"/> -->

    <primeFaces:DivLayoutForm />
	<forms:DominoFormulaForm label="Window Title:" textProperty="windowsTitle" prompt="" id="windowstitle"  includeInLayout="true" visible="true" />
    <forms:TextInformationForm label="Additional information" textProperty="cdataInformation"/>
   
   
    <s:BorderContainer 
             cornerRadius="0"
            borderStyle="solid" borderWeight="1" 
            left="0" right="0" top="10" bottom="10" includeInLayout="true" visible="true" id="formProeprtyPanel">
		<s:VGroup horizontalAlign="left" verticalAlign="middle" percentHeight="100" 
		   paddingLeft="5" paddingTop="10" paddingBottom="10" >
		<forms:DropdownListForm id="editableFormualPanel"
                            label="Form formula:" textProperty="formproperty"
                            collectionProperty="formpropertys" labelField="label" valueField="value"
							labelDisplayFunction="getDominoFieldObject" showTooltipFunction="getDominoFieldTooltip"
                            listItemRenderer="view.primeFaces.forms.renderer.IncludeDropdownListRenderer"/>		
		<forms:DominoFormulaForm label="Formula:" textProperty="webqueryopen" prompt="" id="webqueryopen"  includeInLayout="true" visible="true" />
		<forms:DominoFormulaForm label="Formula:" textProperty="webquerysave" prompt="" id="webquerysave"  includeInLayout="false" visible="false" />
		<s:Label textAlign="start"
												verticalAlign="middle"
												fontWeight="bold"
												maxDisplayedLines="8" fontSize="13"
												left="5" 
												 width="100%"
												 text=" Prohibit design refresh or replace"
												 >
									</s:Label>	
									<s:HGroup left="5" >
									<s:Label textAlign="start"
												verticalAlign="middle"
												fontWeight="bold"
												maxDisplayedLines="8" fontSize="13"
												
												 width="100%"
												 text=" to modify" />
									

									
									<s:CheckBox id="noreplaceCheckbox"
													selected="false"
													change="noreplace_changeHandler(event)"/>
									</s:HGroup>	

		<s:Label text=" Propogate this prohibition of design" left="5"/>			
									
			<s:HGroup left="5" >
			<s:Label text=" change" left="5"/>
			<s:CheckBox id="propagatenoreplaceCheckBox"
							selected="false"
							change="propagatenoreplace_changeHandler(event)"/>	
			</s:HGroup >	

			<s:Label text=" Do not show this design element " width="100%" />
			<s:Label text=" in menus of Notes R4 or later  " width="100%" />
			<s:HGroup left="5" >
				<s:Label text=" clients: " width="100%" />
				<s:CheckBox id="hideForNotesR4Checkbox"
							selected="false"
							change="hide_changeHandler(event)"/>
			</s:HGroup >
			
											

			

			<s:Label text=" " width="100%"  />
			<s:Label text="Hide design element from:" width="100%"  />

			
			
			<s:FormItem left="5" label="Web browsers" skinClass="skins.FormItemSkin">
				<s:CheckBox id="hideForWebCheckbox"
							selected="false"
							change="hide_changeHandler(event)"/>
			</s:FormItem>

						

			<s:FormItem left="5" label="Notes R4.6 or later clients" skinClass="skins.FormItemSkin">
				<s:CheckBox id="hideForNotesCheckbox"
							selected="false"
							change="hide_changeHandler(event)"/>
			</s:FormItem>

	 
	 
	  </s:VGroup>
		
	</s:BorderContainer>
</suportclasses:BasePropertyEditor>