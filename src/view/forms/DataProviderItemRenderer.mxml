<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (C) 2016-present Prominic.NET, Inc.
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the Server Side Public License, version 1,
//  as published by MongoDB, Inc.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  Server Side Public License for more details.
//
//  You should have received a copy of the Server Side Public License
//  along with this program. If not, see
//
//  http://www.mongodb.com/licensing/server-side-public-license
//
//  As a special exception, the copyright holders give permission to link the
//  code of portions of this program with the OpenSSL library under certain
//  conditions as described in each individual source file and distribute
//  linked combinations including the program with the OpenSSL library. You
//  must comply with the Server Side Public License in all respects for
//  all of the code used other than as permitted herein. If you modify file(s)
//  with this exception, you may extend this exception to your version of the
//  file(s), but you are not obligated to do so. If you do not wish to do so,
//  delete this exception statement from your version. If you delete this
//  exception statement from all source files in the program, then also delete
//  it in the license file.
//
////////////////////////////////////////////////////////////////////////////////
-->
<s:ItemRenderer
	xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark">

	<s:layout>
		<s:VerticalLayout
			horizontalAlign="contentJustify" verticalAlign="middle"/>
	</s:layout>

	<s:Label text="{DataProviderListItem(data).label}"
		visible="{!editing}" includeInLayout="{!editing}"
		paddingTop="4" paddingRight="5" paddingBottom="4" paddingLeft="5"
		doubleClickEnabled="true" doubleClick="startEditing()"/>
	<s:TextInput id="input" text="{DataProviderListItem(data).label}"
		visible="{editing}" includeInLayout="{editing}" skinClass="skins.TextInputSkin"
		enter="commitChanges()" focusOut="commitChanges()"/>

	<fx:Script><![CDATA[
		import data.DataProviderListItem;

		[Bindable]
		private var editing:Boolean = false;

		public function startEditing():void
		{
			if(this.editing)
			{
				//already editing!
				return;
			}
			this.editing = true;
			this.input.setFocus();
		}

		private function commitChanges():void
		{
			if(!this.editing || !this.data)
			{
				//not editing, so nothing to commit!
				return;
			}
			DataProviderListItem(this.data).label = this.input.text;
			this.editing = false;
		}

	]]></fx:Script>
</s:ItemRenderer>
